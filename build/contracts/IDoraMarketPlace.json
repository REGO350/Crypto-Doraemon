{
  "contractName": "IDoraMarketPlace",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "TxType",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "MarketTransaction",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_doraContractAddress",
          "type": "address"
        }
      ],
      "name": "setDoraContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "getOffer",
      "outputs": [
        {
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "active",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllTokenOnSale",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "listOfOffers",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "setOffer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "removeOffer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "buyDoraemon",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"TxType\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"MarketTransaction\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"buyDoraemon\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllTokenOnSale\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"listOfOffers\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getOffer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"removeOffer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_doraContractAddress\",\"type\":\"address\"}],\"name\":\"setDoraContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"setOffer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"buyDoraemon(uint256)\":{\"notice\":\"Executes the purchase of _tokenId. Sends the funds to the seller and transfers the token using transferFrom in Kittycontract. Emits the MarketTransaction event with txType \\\"Buy\\\". Requirement: The msg.value needs to equal the price of _tokenId Requirement: There must be an active offer for _tokenId\"},\"getAllTokenOnSale()\":{\"notice\":\"Get all tokenId's that are currently for sale. Returns an empty arror if none exist.\"},\"getOffer(uint256)\":{\"notice\":\"Get the details about a offer for _tokenId. Throws an error if there is no active offer for _tokenId.\"},\"removeOffer(uint256)\":{\"notice\":\"Removes an existing offer. Emits the MarketTransaction event with txType \\\"Remove offer\\\" Requirement: Only the seller of _tokenId can remove an offer.\"},\"setDoraContract(address)\":{\"notice\":\"Set the current KittyContract address and initialize the instance of Kittycontract. Requirement: Only the contract owner can call.\"},\"setOffer(uint256,uint256)\":{\"notice\":\"Creates a new offer for _tokenId for the price _price. Emits the MarketTransaction event with txType \\\"Create offer\\\" Requirement: Only the owner of _tokenId can create an offer. Requirement: There can only be one active offer for a token at a time. Requirement: Marketplace contract (this) needs to be an approved operator when the offer is created.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/riomain/code/blockchain/academy/nftgame/doraemon/contracts/IDoraMarketplace.sol\":\"IDoraMarketPlace\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/riomain/code/blockchain/academy/nftgame/doraemon/contracts/Doracontract.sol\":{\"keccak256\":\"0x88a6958a5ba568ad9a4f4a1648530c2898dc525dc2b1983fee8314e13f6d1278\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9eaabf5b2f163e98abc50eea64a06b5db43e7826cf9a99933a9164c4783e767c\",\"dweb:/ipfs/QmUZptMuPJpNoFBvEjQHQ5wpuYbZx5MCTXfBijXptUnTnh\"]},\"/Users/riomain/code/blockchain/academy/nftgame/doraemon/contracts/IDoraMarketplace.sol\":{\"keccak256\":\"0xe5fd53521dc29b8b9901e0b8b0106a1c5698d9093caee9ceb19d01fcfeb4026c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cef2dded0888ca0e20a16e3ab50ee8cfc91fd3711f9aabf698038bf1088e60c5\",\"dweb:/ipfs/QmWujMqGLiJMEWqPJXms9H8oN3Z7fvAH5qu4RaLFh8gcUC\"]},\"/Users/riomain/code/blockchain/academy/nftgame/doraemon/contracts/IERC721.sol\":{\"keccak256\":\"0xaa202a5a81d07774f070797754a1e785c86b087c39aa614c91e7b6d5c4260f92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://feb57faf288ba2830e7f57a2af589f8ac321b406882a4b1cca5f901a6ce710e8\",\"dweb:/ipfs/QmQo8TqdVArE6qnVwBi6gvuAK4945U4sCdwiC7o4p5iJ9e\"]},\"/Users/riomain/code/blockchain/academy/nftgame/doraemon/contracts/IERC721Receiver.sol\":{\"keccak256\":\"0xfb5418ed629391c05cd361b4849ab880e9cf6d495a7f1ae1848927bf4fec81a5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e168aa05df2ae6e60b013c0e0a34834b4107c10818d115338ac7ff11c5fa2413\",\"dweb:/ipfs/QmSZsbmCUhJ1N6mi2sXRCDWNsGWAWbKZ5QQWoxfQCrvCLK\"]},\"/Users/riomain/code/blockchain/academy/nftgame/doraemon/node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x1cae4f85f114ff17b90414f5da67365b1d00337abb5bce9bf944eb78a2c0673c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5ff16b336ce8f906478d5f2eecc6435e00833bdc0b92f6b209cf9e92cb5b2b7\",\"dweb:/ipfs/QmRD1rAZEqQ73C33cdA3QoUyBDMEWnNKNMc6PNkAZWHeQQ\"]},\"/Users/riomain/code/blockchain/academy/nftgame/doraemon/node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2bfdea0d2562c76fb3c4cf70a86c6ba25c5a30e8f8515c95aafdf8383f8395\",\"dweb:/ipfs/QmTbFya18786ckJfLYUoWau9jBTKfmWnWm5XSViWvB7PXN\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./Doracontract.sol\";\r\nimport \"../node_modules/@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\n/*\r\n * Market place to trade kitties (should **in theory** be used for any ERC721 token)\r\n * It needs an existing Kitty contract to interact with\r\n * Note: it does not inherit from the kitty contracts\r\n * Note: The contract needs to be an operator for everyone who is selling through this contract.\r\n */\r\ninterface IDoraMarketPlace {\r\n\r\n    event MarketTransaction(string TxType, address owner, uint256 tokenId);\r\n\r\n    /**\r\n    * Set the current KittyContract address and initialize the instance of Kittycontract.\r\n    * Requirement: Only the contract owner can call.\r\n     */\r\n    function setDoraContract(address _doraContractAddress) external;\r\n\r\n    /**\r\n    * Get the details about a offer for _tokenId. Throws an error if there is no active offer for _tokenId.\r\n     */\r\n    function getOffer(uint256 _tokenId) external view returns ( address seller, uint256 price, uint256 index, uint256 tokenId, bool active);\r\n\r\n    /**\r\n    * Get all tokenId's that are currently for sale. Returns an empty arror if none exist.\r\n     */\r\n    function getAllTokenOnSale() external view  returns(uint256[] memory listOfOffers);\r\n\r\n    /**\r\n    * Creates a new offer for _tokenId for the price _price.\r\n    * Emits the MarketTransaction event with txType \"Create offer\"\r\n    * Requirement: Only the owner of _tokenId can create an offer.\r\n    * Requirement: There can only be one active offer for a token at a time.\r\n    * Requirement: Marketplace contract (this) needs to be an approved operator when the offer is created.\r\n     */\r\n    function setOffer(uint256 _price, uint256 _tokenId) external;\r\n\r\n    /**\r\n    * Removes an existing offer.\r\n    * Emits the MarketTransaction event with txType \"Remove offer\"\r\n    * Requirement: Only the seller of _tokenId can remove an offer.\r\n     */\r\n    function removeOffer(uint256 _tokenId) external;\r\n\r\n    /**\r\n    * Executes the purchase of _tokenId.\r\n    * Sends the funds to the seller and transfers the token using transferFrom in Kittycontract.\r\n    * Emits the MarketTransaction event with txType \"Buy\".\r\n    * Requirement: The msg.value needs to equal the price of _tokenId\r\n    * Requirement: There must be an active offer for _tokenId\r\n     */\r\n    function buyDoraemon(uint256 _tokenId) external payable;\r\n}\r\n",
  "sourcePath": "/Users/riomain/code/blockchain/academy/nftgame/doraemon/contracts/IDoraMarketplace.sol",
  "ast": {
    "absolutePath": "/Users/riomain/code/blockchain/academy/nftgame/doraemon/contracts/IDoraMarketplace.sol",
    "exportedSymbols": {
      "Context": [
        1871
      ],
      "Doracontract": [
        1539
      ],
      "IDoraMarketPlace": [
        1601
      ],
      "IERC721": [
        1722
      ],
      "IERC721Receiver": [
        1738
      ],
      "Ownable": [
        1848
      ]
    },
    "id": 1602,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1541,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:2"
      },
      {
        "absolutePath": "/Users/riomain/code/blockchain/academy/nftgame/doraemon/contracts/Doracontract.sol",
        "file": "./Doracontract.sol",
        "id": 1542,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1602,
        "sourceUnit": 1540,
        "src": "60:28:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/riomain/code/blockchain/academy/nftgame/doraemon/node_modules/@openzeppelin/contracts/access/Ownable.sol",
        "file": "../node_modules/@openzeppelin/contracts/access/Ownable.sol",
        "id": 1543,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1602,
        "sourceUnit": 1849,
        "src": "90:68:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 1601,
        "linearizedBaseContracts": [
          1601
        ],
        "name": "IDoraMarketPlace",
        "nameLocation": "477:16:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "id": 1551,
            "name": "MarketTransaction",
            "nameLocation": "509:17:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1550,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1545,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "TxType",
                  "nameLocation": "534:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1551,
                  "src": "527:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1544,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "527:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1547,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "550:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1551,
                  "src": "542:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1546,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "542:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1549,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "565:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1551,
                  "src": "557:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1548,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "557:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "526:47:2"
            },
            "src": "503:71:2"
          },
          {
            "documentation": {
              "id": 1552,
              "nodeType": "StructuredDocumentation",
              "src": "582:157:2",
              "text": " Set the current KittyContract address and initialize the instance of Kittycontract.\n Requirement: Only the contract owner can call."
            },
            "functionSelector": "36ca541c",
            "id": 1557,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setDoraContract",
            "nameLocation": "754:15:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1555,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1554,
                  "mutability": "mutable",
                  "name": "_doraContractAddress",
                  "nameLocation": "778:20:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1557,
                  "src": "770:28:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1553,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "770:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "769:30:2"
            },
            "returnParameters": {
              "id": 1556,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "808:0:2"
            },
            "scope": 1601,
            "src": "745:64:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1558,
              "nodeType": "StructuredDocumentation",
              "src": "817:121:2",
              "text": " Get the details about a offer for _tokenId. Throws an error if there is no active offer for _tokenId."
            },
            "functionSelector": "4579268a",
            "id": 1573,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getOffer",
            "nameLocation": "953:8:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1561,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1560,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "970:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1573,
                  "src": "962:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1559,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "962:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "961:18:2"
            },
            "returnParameters": {
              "id": 1572,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1563,
                  "mutability": "mutable",
                  "name": "seller",
                  "nameLocation": "1012:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1573,
                  "src": "1004:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1562,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1004:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1565,
                  "mutability": "mutable",
                  "name": "price",
                  "nameLocation": "1028:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1573,
                  "src": "1020:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1564,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1020:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1567,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "1043:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1573,
                  "src": "1035:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1566,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1035:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1569,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "1058:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1573,
                  "src": "1050:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1568,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1050:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1571,
                  "mutability": "mutable",
                  "name": "active",
                  "nameLocation": "1072:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1573,
                  "src": "1067:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1570,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1067:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1002:77:2"
            },
            "scope": 1601,
            "src": "944:136:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1574,
              "nodeType": "StructuredDocumentation",
              "src": "1088:104:2",
              "text": " Get all tokenId's that are currently for sale. Returns an empty arror if none exist."
            },
            "functionSelector": "49b3709f",
            "id": 1580,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getAllTokenOnSale",
            "nameLocation": "1207:17:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1575,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1224:2:2"
            },
            "returnParameters": {
              "id": 1579,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1578,
                  "mutability": "mutable",
                  "name": "listOfOffers",
                  "nameLocation": "1267:12:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1580,
                  "src": "1250:29:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1576,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1250:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1577,
                    "nodeType": "ArrayTypeName",
                    "src": "1250:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1249:31:2"
            },
            "scope": 1601,
            "src": "1198:83:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1581,
              "nodeType": "StructuredDocumentation",
              "src": "1289:396:2",
              "text": " Creates a new offer for _tokenId for the price _price.\n Emits the MarketTransaction event with txType \"Create offer\"\n Requirement: Only the owner of _tokenId can create an offer.\n Requirement: There can only be one active offer for a token at a time.\n Requirement: Marketplace contract (this) needs to be an approved operator when the offer is created."
            },
            "functionSelector": "941b055b",
            "id": 1588,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setOffer",
            "nameLocation": "1700:8:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1586,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1583,
                  "mutability": "mutable",
                  "name": "_price",
                  "nameLocation": "1717:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1588,
                  "src": "1709:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1582,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1709:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1585,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "1733:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1588,
                  "src": "1725:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1584,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1725:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1708:34:2"
            },
            "returnParameters": {
              "id": 1587,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1751:0:2"
            },
            "scope": 1601,
            "src": "1691:61:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1589,
              "nodeType": "StructuredDocumentation",
              "src": "1760:183:2",
              "text": " Removes an existing offer.\n Emits the MarketTransaction event with txType \"Remove offer\"\n Requirement: Only the seller of _tokenId can remove an offer."
            },
            "functionSelector": "95a0f9c7",
            "id": 1594,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "removeOffer",
            "nameLocation": "1958:11:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1592,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1591,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "1978:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1594,
                  "src": "1970:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1590,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1970:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1969:18:2"
            },
            "returnParameters": {
              "id": 1593,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1996:0:2"
            },
            "scope": 1601,
            "src": "1949:48:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1595,
              "nodeType": "StructuredDocumentation",
              "src": "2005:346:2",
              "text": " Executes the purchase of _tokenId.\n Sends the funds to the seller and transfers the token using transferFrom in Kittycontract.\n Emits the MarketTransaction event with txType \"Buy\".\n Requirement: The msg.value needs to equal the price of _tokenId\n Requirement: There must be an active offer for _tokenId"
            },
            "functionSelector": "07b18337",
            "id": 1600,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "buyDoraemon",
            "nameLocation": "2366:11:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1598,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1597,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "2386:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1600,
                  "src": "2378:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1596,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2378:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2377:18:2"
            },
            "returnParameters": {
              "id": 1599,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2412:0:2"
            },
            "scope": 1601,
            "src": "2357:56:2",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1602,
        "src": "467:1949:2",
        "usedErrors": []
      }
    ],
    "src": "33:2385:2"
  },
  "legacyAST": {
    "absolutePath": "/Users/riomain/code/blockchain/academy/nftgame/doraemon/contracts/IDoraMarketplace.sol",
    "exportedSymbols": {
      "Context": [
        1871
      ],
      "Doracontract": [
        1539
      ],
      "IDoraMarketPlace": [
        1601
      ],
      "IERC721": [
        1722
      ],
      "IERC721Receiver": [
        1738
      ],
      "Ownable": [
        1848
      ]
    },
    "id": 1602,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1541,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:2"
      },
      {
        "absolutePath": "/Users/riomain/code/blockchain/academy/nftgame/doraemon/contracts/Doracontract.sol",
        "file": "./Doracontract.sol",
        "id": 1542,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1602,
        "sourceUnit": 1540,
        "src": "60:28:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/riomain/code/blockchain/academy/nftgame/doraemon/node_modules/@openzeppelin/contracts/access/Ownable.sol",
        "file": "../node_modules/@openzeppelin/contracts/access/Ownable.sol",
        "id": 1543,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1602,
        "sourceUnit": 1849,
        "src": "90:68:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 1601,
        "linearizedBaseContracts": [
          1601
        ],
        "name": "IDoraMarketPlace",
        "nameLocation": "477:16:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "id": 1551,
            "name": "MarketTransaction",
            "nameLocation": "509:17:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1550,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1545,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "TxType",
                  "nameLocation": "534:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1551,
                  "src": "527:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1544,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "527:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1547,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "550:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1551,
                  "src": "542:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1546,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "542:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1549,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "565:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1551,
                  "src": "557:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1548,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "557:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "526:47:2"
            },
            "src": "503:71:2"
          },
          {
            "documentation": {
              "id": 1552,
              "nodeType": "StructuredDocumentation",
              "src": "582:157:2",
              "text": " Set the current KittyContract address and initialize the instance of Kittycontract.\n Requirement: Only the contract owner can call."
            },
            "functionSelector": "36ca541c",
            "id": 1557,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setDoraContract",
            "nameLocation": "754:15:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1555,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1554,
                  "mutability": "mutable",
                  "name": "_doraContractAddress",
                  "nameLocation": "778:20:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1557,
                  "src": "770:28:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1553,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "770:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "769:30:2"
            },
            "returnParameters": {
              "id": 1556,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "808:0:2"
            },
            "scope": 1601,
            "src": "745:64:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1558,
              "nodeType": "StructuredDocumentation",
              "src": "817:121:2",
              "text": " Get the details about a offer for _tokenId. Throws an error if there is no active offer for _tokenId."
            },
            "functionSelector": "4579268a",
            "id": 1573,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getOffer",
            "nameLocation": "953:8:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1561,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1560,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "970:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1573,
                  "src": "962:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1559,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "962:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "961:18:2"
            },
            "returnParameters": {
              "id": 1572,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1563,
                  "mutability": "mutable",
                  "name": "seller",
                  "nameLocation": "1012:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1573,
                  "src": "1004:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1562,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1004:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1565,
                  "mutability": "mutable",
                  "name": "price",
                  "nameLocation": "1028:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1573,
                  "src": "1020:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1564,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1020:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1567,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "1043:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1573,
                  "src": "1035:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1566,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1035:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1569,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "1058:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1573,
                  "src": "1050:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1568,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1050:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1571,
                  "mutability": "mutable",
                  "name": "active",
                  "nameLocation": "1072:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1573,
                  "src": "1067:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1570,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1067:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1002:77:2"
            },
            "scope": 1601,
            "src": "944:136:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1574,
              "nodeType": "StructuredDocumentation",
              "src": "1088:104:2",
              "text": " Get all tokenId's that are currently for sale. Returns an empty arror if none exist."
            },
            "functionSelector": "49b3709f",
            "id": 1580,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getAllTokenOnSale",
            "nameLocation": "1207:17:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1575,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1224:2:2"
            },
            "returnParameters": {
              "id": 1579,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1578,
                  "mutability": "mutable",
                  "name": "listOfOffers",
                  "nameLocation": "1267:12:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1580,
                  "src": "1250:29:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1576,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1250:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1577,
                    "nodeType": "ArrayTypeName",
                    "src": "1250:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1249:31:2"
            },
            "scope": 1601,
            "src": "1198:83:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1581,
              "nodeType": "StructuredDocumentation",
              "src": "1289:396:2",
              "text": " Creates a new offer for _tokenId for the price _price.\n Emits the MarketTransaction event with txType \"Create offer\"\n Requirement: Only the owner of _tokenId can create an offer.\n Requirement: There can only be one active offer for a token at a time.\n Requirement: Marketplace contract (this) needs to be an approved operator when the offer is created."
            },
            "functionSelector": "941b055b",
            "id": 1588,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setOffer",
            "nameLocation": "1700:8:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1586,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1583,
                  "mutability": "mutable",
                  "name": "_price",
                  "nameLocation": "1717:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1588,
                  "src": "1709:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1582,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1709:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1585,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "1733:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1588,
                  "src": "1725:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1584,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1725:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1708:34:2"
            },
            "returnParameters": {
              "id": 1587,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1751:0:2"
            },
            "scope": 1601,
            "src": "1691:61:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1589,
              "nodeType": "StructuredDocumentation",
              "src": "1760:183:2",
              "text": " Removes an existing offer.\n Emits the MarketTransaction event with txType \"Remove offer\"\n Requirement: Only the seller of _tokenId can remove an offer."
            },
            "functionSelector": "95a0f9c7",
            "id": 1594,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "removeOffer",
            "nameLocation": "1958:11:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1592,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1591,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "1978:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1594,
                  "src": "1970:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1590,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1970:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1969:18:2"
            },
            "returnParameters": {
              "id": 1593,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1996:0:2"
            },
            "scope": 1601,
            "src": "1949:48:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1595,
              "nodeType": "StructuredDocumentation",
              "src": "2005:346:2",
              "text": " Executes the purchase of _tokenId.\n Sends the funds to the seller and transfers the token using transferFrom in Kittycontract.\n Emits the MarketTransaction event with txType \"Buy\".\n Requirement: The msg.value needs to equal the price of _tokenId\n Requirement: There must be an active offer for _tokenId"
            },
            "functionSelector": "07b18337",
            "id": 1600,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "buyDoraemon",
            "nameLocation": "2366:11:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1598,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1597,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "2386:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1600,
                  "src": "2378:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1596,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2378:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2377:18:2"
            },
            "returnParameters": {
              "id": 1599,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2412:0:2"
            },
            "scope": 1601,
            "src": "2357:56:2",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1602,
        "src": "467:1949:2",
        "usedErrors": []
      }
    ],
    "src": "33:2385:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.4+commit.c7e474f2.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-05-24T01:46:53.858Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "buyDoraemon(uint256)": {
        "notice": "Executes the purchase of _tokenId. Sends the funds to the seller and transfers the token using transferFrom in Kittycontract. Emits the MarketTransaction event with txType \"Buy\". Requirement: The msg.value needs to equal the price of _tokenId Requirement: There must be an active offer for _tokenId"
      },
      "getAllTokenOnSale()": {
        "notice": "Get all tokenId's that are currently for sale. Returns an empty arror if none exist."
      },
      "getOffer(uint256)": {
        "notice": "Get the details about a offer for _tokenId. Throws an error if there is no active offer for _tokenId."
      },
      "removeOffer(uint256)": {
        "notice": "Removes an existing offer. Emits the MarketTransaction event with txType \"Remove offer\" Requirement: Only the seller of _tokenId can remove an offer."
      },
      "setDoraContract(address)": {
        "notice": "Set the current KittyContract address and initialize the instance of Kittycontract. Requirement: Only the contract owner can call."
      },
      "setOffer(uint256,uint256)": {
        "notice": "Creates a new offer for _tokenId for the price _price. Emits the MarketTransaction event with txType \"Create offer\" Requirement: Only the owner of _tokenId can create an offer. Requirement: There can only be one active offer for a token at a time. Requirement: Marketplace contract (this) needs to be an approved operator when the offer is created."
      }
    },
    "version": 1
  }
}